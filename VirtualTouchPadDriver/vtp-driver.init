#!/bin/sh

### BEGIN INIT INFO
# Provides:          vtp_driver
# Required-Start:    $network 
# Required-Stop:     $network 
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Virtual TouchaPad Driver
# Description: 		driver work as a touchpad
### END INIT INFO

# Sample init script for the a driver module <rubini@linux.it>

DEVICE="virtual_touchpad"

# The list of filenames and minor numbers: $PREFIX is prefixed to all names
PREFIX="scull"

INSMOD=/sbin/insmod; # use /sbin/modprobe if you prefer

device_specific_post_load(){
    true; # fill at will
}
device_specific_pre_unload(){
    true; # fill at will
}



# kernel version, used to look for modules
KERNEL=`uname -r`

#FIXME: it looks like there is no misc section. Where should it be?
MODDIR="/lib/modules/${KERNEL}/kernel/drivers/input/mouse"
if [ ! -d $MODDIR ]; then MODDIR="/lib/modules/${KERNEL}/drivers"; fi

# Root or die
if [ "$(id -u)" != "0" ]
then
  echo "You must be root to load or unload kernel modules"
  exit 1
fi



# Create device files
create_files () {
mode="666"
# Group: since distributions do it differently, look for wheel or use staff
if grep -q '^staff:' /etc/group; then
    group="staff"
else
    group="wheel"
fi
    cd /dev
mknod /dev/${DEVICE}0 c $MAJOR 0
ln -sf ${DEVICE}0 /dev/${DEVICE}
chgrp $group /dev/${DEVICE}0
chmod $mode  /dev/${DEVICE}0
}

# Remove device files
remove_files () {
    cd /dev
	rm -f /dev/${DEVICE}0
   rm -f /dev/${DEVICE}
}

# Load and create files
load_device () {
    
    if [ -f $MODDIR/$DEVICE.ko ]; then
	devpath=$MODDIR/$DEVICE.ko
    else if [ -f ./$DEVICE.ko ]; then
	devpath=./$DEVICE.ko
    else
	devpath=$DEVICE; # let insmod/modprobe guess
    fi; fi
    if [ "$devpath" != "$DEVICE" ]; then
	echo -n " (loading file $devpath)"
    fi

    if $INSMOD $devpath ; then
	MAJOR=`awk "\\$2==\"$DEVICE\" {print \\$1}" /proc/devices`
	remove_files 
	create_files 
	device_specific_post_load
    else
	echo " FAILED!"
     fi
}

# Unload and remove files
unload_device () {
    device_specific_pre_unload 
    /sbin/rmmod $DEVICE
    remove_files 
}


case "$1" in
  start)
     echo -n "Loading $DEVICE"
     load_device
     echo "."
     ;;
  stop)
     echo -n "Unloading $DEVICE"
     unload_device
     echo "."
     ;;
  force-reload|restart)
     echo -n "Reloading $DEVICE"
     unload_device
     load_device
     echo "."
     ;;
  *)
     echo "Usage: $0 {start|stop|restart|force-reload}"
     exit 1
esac

exit 0
